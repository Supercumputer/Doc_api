openapi: 3.0.3
info:
  title: Gemfarmer - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  
  termsOfService: http://swagger.io/terms/
  version: 1.0.11
servers:
  - url: http://localhost:3000/api
tags:
  - name: groups
    description: Operations related to groups
  - name: profiles
    description: Operations related to profiles
paths:
  /groups:
    get:
      tags:
        - groups
      summary: Retrieve a list of groups
      description: Retrieve a list of all groups with their basic details
      operationId: getGroups
      responses:
        '200':
          description: Successful operation, returns a list of groups
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "success"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
        '500':
          description: Server error

  /profiles/delete/{id}:
    delete:
      tags:
        - profiles
      summary: Delete a profile by ID
      description: Deletes the profile specified by its ID
      operationId: deleteProfileById
      parameters:
        - name: id
          in: path
          description: ID of the profile to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
          '200':
            description: Successful operation, profile deleted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "success"
                    data:
                      type: 'null'
          '404':
            description: Profile not found
          '500':
            description: Server error

  /profiles/start/{id}:
    get:
      tags:
        - profiles
      summary: Start a profile by ID
      description: Launches a Chrome browser instance with the configuration specified in the profile ID. The browser is configured with extensions, user data, and proxy settings as needed.
      operationId: startProfileById
      parameters:
        - name: id
          in: path
          description: ID of the profile to start
          required: true
          schema:
            type: string
            format: uuid
        - name: addination_args
          in: query
          description: Additional arguments to pass to the Chrome browser, separated by commas.
          schema:
            type: array
            items:
              type: string
            example: ["--headless", "--disable-gpu"]
        - name: win_pos
          in: query
          description: Position of the browser window in the format `x,y`.
          schema:
            type: string
            example: "100,200"
        - name: win_size
          in: query
          description: Size of the browser window in the format `width,height`.
          schema:
            type: string
            example: "1280,720"
        - name: win_scale
          in: query
          description: Scale factor for the browser's device scale.
          schema:
            type: string
            example: "1.5"
      responses:
        '200':
          description: Profile successfully started
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "success"
                  profile_id:
                    type: string
                    example: "123"
        '400':
          description: Invalid request parameters
        '404':
          description: Profile not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An unexpected error occurred."
      security:
        - api_key: []
        - profile_auth:
            - write:profiles
            - read:profiles

  /profiles/close/{id}:
    get:
      tags:
        - profiles
      summary: Close a browser instance by profile ID
      description: Closes the browser instance associated with the given profile ID and updates the profile status to '1' (indicating inactive or closed). If the profile is not found, the status is updated to '1' regardless.
      operationId: closeProfileById
      parameters:
        - name: id
          in: path
          description: ID of the profile to close
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Browser successfully closed and profile status updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "success"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An unexpected error occurred."
      security:
        - api_key: []
        - profile_auth:
            - write:profiles
            - read:profiles
  /profiles/update/{profile_id}:
    post:
      tags:
        - profiles
      summary: Update a profile
      description: Updates the details of a profile based on the provided profile ID.
      operationId: updateProfile
      parameters:
        - name: profile_id
          in: path
          description: ID of the profile to update
          required: true
          schema:
            type: string
      requestBody:
        description: Profile details to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile_name:
                  type: string
                  description: Name of the profile
                group_id:
                  type: string
                  description: ID of the profile group
                proxy:
                  type: string
                  description: Proxy settings in the format "type://host:port"
                startup_url:
                  type: string
                  description: URL to start with
                note:
                  type: string
                  description: Additional notes
                user_agent:
                  type: string
                  description: User agent string
              required:
                - profile_name
                - group_id
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Profile updated successfully"
        '400':
          description: Bad request, possibly invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid input data"
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Profile not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An error occurred while updating the profile"
      security:
        - api_key: []
        - profile_auth:
            - write:profiles
            - read:profiles

  /profiles/create:
    post:
      tags:
        - profiles
      summary: Create a new profile
      description: Creates a new profile with the provided details.
      operationId: createProfile
      requestBody:
        description: Profile details to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profile_name:
                  type: string
                  description: Name of the profile
                group:
                  type: string
                  description: ID of the profile group
                proxy:
                  type: object
                  properties:
                    type:
                      type: string
                      description: Proxy type (e.g., http, socks5)
                    host:
                      type: string
                      description: Proxy host
                    port:
                      type: integer
                      description: Proxy port
                    user_name:
                      type: string
                      description: Proxy username (optional)
                    password:
                      type: string
                      description: Proxy password (optional)
                browser:
                  type: object
                  properties:
                    type:
                      type: string
                      description: Browser type (e.g., Chrome)
                    version:
                      type: string
                      description: Browser version
                device_name:
                  type: object
                  properties:
                    type:
                      type: string
                      description: Device type
                    value:
                      type: string
                      description: Device value (e.g., Desktop)
                mac_address:
                  type: object
                  properties:
                    type:
                      type: string
                      description: MAC address type
                    value:
                      type: string
                      description: MAC address value
                flash:
                  type: string
                  description: Flash setting (e.g., allow, block)
                tracking:
                  type: string
                  description: Tracking setting (e.g., allow, block)
                cpu:
                  type: object
                  properties:
                    type:
                      type: string
                      description: CPU type
                    value:
                      type: integer
                      description: Number of CPU cores
              required:
                - profile_name
                - group
                - browser
                - device_name
                - mac_address
                - flash
                - tracking
                - cpu
      responses:
        '200':
          description: Profile created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "success"
        '400':
          description: Bad request, possibly invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid input data"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An error occurred while creating the profile"
      security:
        - api_key: []
        - profile_auth:
            - write:profiles

  /profile/{id}:
    get:
      tags:
        - profiles
      summary: Retrieve a profile by ID
      description: Fetches the details of a profile specified by the profile ID.
      operationId: getProfileById
      parameters:
        - name: id
          in: path
          description: ID of the profile to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Profile not found"
                  data:
                    type: object
                    example: {}
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An error occurred while retrieving the profile"
      security:
        - api_key: []
        - profile_auth:
            - read:profiles
  
  /profiles:
    get:
      tags:
        - profiles
      summary: Retrieve a list of profiles
      description: Returns a list of profiles with optional filters and pagination
      operationId: getProfiles
      parameters:
        - name: group_id
          in: query
          description: Filter profiles by group ID
          schema:
            type: integer
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          description: Number of profiles per page
          schema:
            type: integer
            default: 50
        - name: sort
          in: query
          description: Sorting order
          schema:
            type: integer
            enum: [0, 1, 2, 3]
            default: 0
        - name: search
          in: query
          description: Search term for filtering profiles
          schema:
            type: string
      responses:
        '200':
          description: Profiles retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "success"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
        '500':
          description: Server error



components:
  schemas:
    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Development Team"
        createdAt:
          type: string
          format: date-time
          example: "2023-09-01T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2023-09-02T12:00:00Z"
      xml:
        name: group

    Profile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        profile_data:
          type: object
          properties:
            profile_name:
              type: string
              example: "My Profile"
            startup_url:
              type: string
              example: "https://www.example.com"
            note:
              type: string
              example: "This is a sample profile"
            proxy:
              type: object
              properties:
                type:
                  type: string
                  example: "http"
                host:
                  type: string
                  example: "proxy.example.com"
                port:
                  type: integer
                  example: 8080
                user_name:
                  type: string
                  example: "user"
                password:
                  type: string
                  example: "pass"
              xml:
                name: proxy
            user_agent:
              type: string
              example: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
          xml:
            name: profile_data